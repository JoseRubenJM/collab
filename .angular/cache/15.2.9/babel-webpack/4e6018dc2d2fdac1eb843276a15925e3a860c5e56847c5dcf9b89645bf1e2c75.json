{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nvar _asyncToGenerator = require(\"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InsecureTokenProvider = void 0;\nconst protocol_definitions_1 = require(\"@fluidframework/protocol-definitions\");\nconst generateToken_1 = require(\"./generateToken\");\n/**\n * Provides an in memory implementation of {@link @fluidframework/routerlicious-driver#ITokenProvider} that can be\n * used to insecurely connect to the Fluid Relay.\n *\n * As the name implies, this is not secure and should not be used in production.\n * It simply makes examples where authentication is not relevant easier to bootstrap.\n */\nclass InsecureTokenProvider {\n  constructor(\n  /**\n   * Private server tenantKey for generating tokens.\n   */\n  tenantKey,\n  /**\n   * User with whom generated tokens will be associated.\n   */\n  user) {\n    this.tenantKey = tenantKey;\n    this.user = user;\n  }\n  /**\n   * {@inheritDoc @fluidframework/routerlicious-driver#ITokenProvider.fetchOrdererToken}\n   */\n  fetchOrdererToken(tenantId, documentId) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return {\n        fromCache: true,\n        jwt: (0, generateToken_1.generateToken)(tenantId, _this.tenantKey, [protocol_definitions_1.ScopeType.DocRead, protocol_definitions_1.ScopeType.DocWrite, protocol_definitions_1.ScopeType.SummaryWrite], documentId, _this.user)\n      };\n    })();\n  }\n  /**\n   * {@inheritDoc @fluidframework/routerlicious-driver#ITokenProvider.fetchStorageToken}\n   */\n  fetchStorageToken(tenantId, documentId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return {\n        fromCache: true,\n        jwt: (0, generateToken_1.generateToken)(tenantId, _this2.tenantKey, [protocol_definitions_1.ScopeType.DocRead, protocol_definitions_1.ScopeType.DocWrite, protocol_definitions_1.ScopeType.SummaryWrite], documentId, _this2.user)\n      };\n    })();\n  }\n}\nexports.InsecureTokenProvider = InsecureTokenProvider;\n//# sourceMappingURL=insecureTokenProvider.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}