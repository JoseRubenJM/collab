{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nvar _asyncToGenerator = require(\"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MockFluidDataStoreContext = void 0;\nconst telemetry_utils_1 = require(\"@fluidframework/telemetry-utils\");\nconst uuid_1 = require(\"uuid\");\nclass MockFluidDataStoreContext {\n  constructor(id = (0, uuid_1.v4)(), existing = false, logger = telemetry_utils_1.DebugLogger.create(\"fluid:MockFluidDataStoreContext\")) {\n    this.id = id;\n    this.existing = existing;\n    this.logger = logger;\n    /**\n     * @deprecated This field is currently unused and will be removed in an\n     * upcoming breaking change\n     */\n    this.documentId = undefined;\n    this.isLocalDataStore = true;\n    this.packagePath = undefined;\n    this.options = undefined;\n    this.clientId = (0, uuid_1.v4)();\n    this.clientDetails = undefined;\n    this.connected = true;\n    this.deltaManager = undefined;\n    this.containerRuntime = undefined;\n    this.storage = undefined;\n    this.IFluidDataStoreRegistry = undefined;\n    this.IFluidHandleContext = undefined;\n    /**\n     * Indicates the attachment state of the data store to a host service.\n     */\n    this.attachState = undefined;\n    this.scope = undefined;\n  }\n  on(event, listener) {\n    switch (event) {\n      case \"attaching\":\n      case \"attached\":\n        return this;\n      default:\n        throw new Error(\"Method not implemented.\");\n    }\n  }\n  once(event, listener) {\n    return this;\n  }\n  off(event, listener) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getQuorum() {\n    return undefined;\n  }\n  getAudience() {\n    return undefined;\n  }\n  submitMessage(type, content, localOpMetadata) {\n    throw new Error(\"Method not implemented.\");\n  }\n  submitSignal(type, content) {\n    throw new Error(\"Method not implemented.\");\n  }\n  bindToContext() {\n    throw new Error(\"Method not implemented.\");\n  }\n  setChannelDirty(address) {\n    throw new Error(\"Method not implemented.\");\n  }\n  getAbsoluteUrl(relativeUrl) {\n    return _asyncToGenerator(function* () {\n      throw new Error(\"Method not implemented.\");\n    })();\n  }\n  getCreateChildSummarizerNodeFn(id, createParam) {\n    throw new Error(\"Method not implemented.\");\n  }\n  uploadBlob(blob) {\n    return _asyncToGenerator(function* () {\n      throw new Error(\"Method not implemented.\");\n    })();\n  }\n  getInitialGCSummaryDetails() {\n    return _asyncToGenerator(function* () {\n      throw new Error(\"Method not implemented.\");\n    })();\n  }\n  getBaseGCDetails() {\n    return _asyncToGenerator(function* () {\n      throw new Error(\"Method not implemented.\");\n    })();\n  }\n}\nexports.MockFluidDataStoreContext = MockFluidDataStoreContext;\n//# sourceMappingURL=mocksDataStoreContext.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}