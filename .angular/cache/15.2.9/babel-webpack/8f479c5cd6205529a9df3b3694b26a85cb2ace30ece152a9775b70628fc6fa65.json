{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { SharedNumberSequenceFactory } from \"./sequenceFactory\";\nimport { SharedSequence } from \"./sharedSequence\";\n/**\n * The SharedNumberSequence holds a sequence of numbers. Each number will be stored\n * at a position within the sequence. See the\n * {@link https://github.com/microsoft/FluidFramework/blob/main/packages/dds/sequence/README.md | sequence readme}\n * for details on working with sequences.\n */\nexport class SharedNumberSequence extends SharedSequence {\n  constructor(document, id, attributes) {\n    super(document, id, attributes, SharedNumberSequenceFactory.segmentFromSpec);\n    this.id = id;\n  }\n  /**\n   * Create a new shared number sequence\n   *\n   * @param runtime - data store runtime the new shared number sequence belongs to\n   * @param id - optional name of the shared number sequence\n   * @returns newly create shared number sequence (but not attached yet)\n   */\n  static create(runtime, id) {\n    return runtime.createChannel(id, SharedNumberSequenceFactory.Type);\n  }\n  /**\n   * Get a factory for SharedNumberSequence to register with the data store.\n   *\n   * @returns a factory that creates and load SharedNumberSequence\n   */\n  static getFactory() {\n    return new SharedNumberSequenceFactory();\n  }\n  getRange(start, end) {\n    return this.getItems(start, end);\n  }\n}\n//# sourceMappingURL=sharedNumberSequence.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}