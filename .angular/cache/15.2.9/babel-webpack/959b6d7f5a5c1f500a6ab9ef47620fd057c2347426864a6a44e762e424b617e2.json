{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nexport var MessageType = /*#__PURE__*/(() => {\n  (function (MessageType) {\n    // Empty operation message. Used to send an updated reference sequence number.\n    MessageType[\"NoOp\"] = \"noop\";\n    // System message sent to indicate a new client has joined the collaboration\n    MessageType[\"ClientJoin\"] = \"join\";\n    // System message sent to indicate a client has left the collaboration\n    MessageType[\"ClientLeave\"] = \"leave\";\n    // Proposes a new consensus value\n    MessageType[\"Propose\"] = \"propose\";\n    // Message used to reject a pending proposal\n    MessageType[\"Reject\"] = \"reject\";\n    // Summary op\n    MessageType[\"Summarize\"] = \"summarize\";\n    // Summary op written\n    MessageType[\"SummaryAck\"] = \"summaryAck\";\n    // Summary op write failure\n    MessageType[\"SummaryNack\"] = \"summaryNack\";\n    // Channel operation.\n    MessageType[\"Operation\"] = \"op\";\n    // Message to indicate the need of a remote agent for a document.\n    MessageType[\"RemoteHelp\"] = \"remoteHelp\";\n    // Message to indicate that no active clients are present.\n    MessageType[\"NoClient\"] = \"noClient\";\n    // Message to indicate successful round trip.\n    MessageType[\"RoundTrip\"] = \"tripComplete\";\n    // Service specific control messages that are never sequenced.\n    MessageType[\"Control\"] = \"control\";\n  })(MessageType || (MessageType = {}));\n  return MessageType;\n})();\n/**\n * Type of the Nack.\n * InvalidScopeError: Client's token is not valid for the intended op.\n * ThrottlingError: Retryable after retryAfter number.\n * BadRequestError: Clients op is invalid and should retry immediately with a valid op.\n * LimitExceededError: Service is having issues. Client should not retry.\n */\nexport var NackErrorType = /*#__PURE__*/(() => {\n  (function (NackErrorType) {\n    NackErrorType[\"ThrottlingError\"] = \"ThrottlingError\";\n    NackErrorType[\"InvalidScopeError\"] = \"InvalidScopeError\";\n    NackErrorType[\"BadRequestError\"] = \"BadRequestError\";\n    NackErrorType[\"LimitExceededError\"] = \"LimitExceededError\";\n  })(NackErrorType || (NackErrorType = {}));\n  return NackErrorType;\n})();\n\n//# sourceMappingURL=protocol.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}