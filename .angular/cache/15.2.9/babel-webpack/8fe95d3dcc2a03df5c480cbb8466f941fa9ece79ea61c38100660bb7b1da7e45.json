{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Returns a wrapper around the provided function, which will only invoke the inner function if the provided\n * {@link @fluidframework/common-definitions#IDisposable | disposable} object has not yet been disposed.\n *\n * @throws Will throw an error if the item has already been disposed.\n */\nexport function doIfNotDisposed(disposable, f) {\n  return (...args) => {\n    if (disposable.disposed) {\n      throw new Error(\"Already disposed\");\n    } else {\n      return f(...args);\n    }\n  };\n}\n//# sourceMappingURL=disposal.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}