{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { gcBlobKey } from \"@fluidframework/runtime-definitions\";\nimport { addBlobToSummary } from \"@fluidframework/runtime-utils\";\nimport { ChannelDeltaConnection } from \"./channelDeltaConnection\";\nimport { ChannelStorageService } from \"./channelStorageService\";\nexport const attributesBlobKey = \".attributes\";\nexport function createServiceEndpoints(id, connected, submitFn, dirtyFn, storageService, tree, extraBlobs) {\n  const deltaConnection = new ChannelDeltaConnection(id, connected, (message, localOpMetadata) => submitFn(message, localOpMetadata), dirtyFn);\n  const objectStorage = new ChannelStorageService(tree, storageService, extraBlobs);\n  return {\n    deltaConnection,\n    objectStorage\n  };\n}\nexport function summarizeChannel(channel, fullTree = false, trackState = false) {\n  const summarizeResult = channel.summarize(fullTree, trackState);\n  // Add the channel attributes to the returned result.\n  addBlobToSummary(summarizeResult, attributesBlobKey, JSON.stringify(channel.attributes));\n  // Add GC details to the summary.\n  const gcDetails = {\n    usedRoutes: [\"\"],\n    gcData: summarizeResult.gcData\n  };\n  addBlobToSummary(summarizeResult, gcBlobKey, JSON.stringify(gcDetails));\n  return summarizeResult;\n}\n//# sourceMappingURL=channelContext.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}