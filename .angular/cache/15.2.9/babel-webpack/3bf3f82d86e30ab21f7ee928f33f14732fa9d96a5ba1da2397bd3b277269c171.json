{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { assert } from \"@fluidframework/common-utils\";\nexport class ChannelDeltaConnection {\n  constructor(objectId, _connected, submitFn, dirtyFn) {\n    this.objectId = objectId;\n    this._connected = _connected;\n    this.submitFn = submitFn;\n    this.dirtyFn = dirtyFn;\n  }\n  get handler() {\n    assert(!!this._handler);\n    return this._handler;\n  }\n  get connected() {\n    return this._connected;\n  }\n  attach(handler) {\n    assert(this._handler === undefined);\n    this._handler = handler;\n  }\n  setConnectionState(connected) {\n    this._connected = connected;\n    this.handler.setConnectionState(connected);\n  }\n  process(message, local, localOpMetadata) {\n    this.handler.process(message, local, localOpMetadata);\n  }\n  reSubmit(content, localOpMetadata) {\n    this.handler.reSubmit(content, localOpMetadata);\n  }\n  /**\n   * Send new messages to the server\n   */\n  submit(message, localOpMetadata) {\n    this.submitFn(message, localOpMetadata);\n  }\n  /**\n   * Indicates that the channel is dirty and needs to be part of the summary. It is called by a SharedSummaryBlock\n   * that needs to be part of the summary but does not generate ops.\n   */\n  dirty() {\n    this.dirtyFn();\n  }\n}\n//# sourceMappingURL=channelDeltaConnection.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}