{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { DocumentStorageServiceProxy } from \"@fluidframework/driver-utils\";\nimport { debug } from \"./debug\";\nexport class PrefetchDocumentStorageService extends DocumentStorageServiceProxy {\n  constructor() {\n    super(...arguments);\n    // BlobId -> blob prefetchCache cache\n    this.prefetchCache = new Map();\n    this.prefetchEnabled = true;\n  }\n  getSnapshotTree(version) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const p = _this.internalStorageService.getSnapshotTree(version);\n      if (_this.prefetchEnabled) {\n        // We don't care if the prefetch succeed\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        p.then(tree => {\n          if (tree === null || tree === undefined) {\n            return;\n          }\n          _this.prefetchTree(tree);\n        });\n      }\n      return p;\n    })();\n  }\n  read(blobId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.cachedRead(blobId);\n    })();\n  }\n  stopPrefetch() {\n    this.prefetchEnabled = false;\n    this.prefetchCache.clear();\n  }\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  cachedRead(blobId) {\n    if (this.prefetchEnabled) {\n      const prefetchedBlobP = this.prefetchCache.get(blobId);\n      if (prefetchedBlobP !== undefined) {\n        return prefetchedBlobP;\n      }\n      const prefetchedBlobPFromStorage = this.internalStorageService.read(blobId);\n      this.prefetchCache.set(blobId, prefetchedBlobPFromStorage);\n      return prefetchedBlobPFromStorage;\n    }\n    return this.internalStorageService.read(blobId);\n  }\n  prefetchTree(tree) {\n    const secondary = [];\n    this.prefetchTreeCore(tree, secondary);\n    for (const blob of secondary) {\n      // We don't care if the prefetch succeed\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.cachedRead(blob);\n    }\n  }\n  prefetchTreeCore(tree, secondary) {\n    for (const blobKey of Object.keys(tree.blobs)) {\n      const blob = tree.blobs[blobKey];\n      if (blobKey.startsWith(\".\") || blobKey === \"header\" || blobKey.startsWith(\"quorum\")) {\n        if (blob !== null) {\n          // We don't care if the prefetch succeed\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          this.cachedRead(blob);\n        }\n      } else if (!blobKey.startsWith(\"deltas\")) {\n        if (blob !== null) {\n          secondary.push(blob);\n        }\n      }\n    }\n    for (const commit of Object.keys(tree.commits)) {\n      this.getVersions(tree.commits[commit], 1)\n      // eslint-disable-next-line @typescript-eslint/promise-function-async\n      .then(moduleCommit => this.getSnapshotTree(moduleCommit[0])).catch(error => debug(\"Ignored cached read error\", error));\n    }\n    for (const subTree of Object.keys(tree.trees)) {\n      this.prefetchTreeCore(tree.trees[subTree], secondary);\n    }\n  }\n}\n//# sourceMappingURL=prefetchDocumentStorageService.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}