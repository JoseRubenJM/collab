{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n/**\n * Accepted header keys for requests coming to the Loader\n */\nexport var LoaderHeader = /*#__PURE__*/(() => {\n  (function (LoaderHeader) {\n    /**\n     * Use cache for this container. If true, we will load a container from cache if one with the same id/version exists\n     * or create a new container and cache it if it does not. If false, always load a new container and don't cache it.\n     * Currently only used to opt-out of caching, as it will default to true but will be false (even if specified as\n     * true) if the reconnect header is false or the pause header is true, since these containers should not be cached.\n     */\n    LoaderHeader[\"cache\"] = \"fluid-cache\";\n    LoaderHeader[\"clientDetails\"] = \"fluid-client-details\";\n    LoaderHeader[\"executionContext\"] = \"execution-context\";\n    /**\n     * Start the container in a paused, unconnected state. Defaults to false\n     */\n    LoaderHeader[\"pause\"] = \"pause\";\n    LoaderHeader[\"reconnect\"] = \"fluid-reconnect\";\n    LoaderHeader[\"sequenceNumber\"] = \"fluid-sequence-number\";\n    /**\n     * One of the following:\n     * null or \"null\": use ops, no snapshots\n     * undefined: fetch latest snapshot\n     * otherwise, version sha to load snapshot\n     */\n    LoaderHeader[\"version\"] = \"version\";\n  })(LoaderHeader || (LoaderHeader = {}));\n  return LoaderHeader;\n})();\n\n//# sourceMappingURL=loader.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}