{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nvar _asyncToGenerator = require(\"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MockStorage = void 0;\nconst common_utils_1 = require(\"@fluidframework/common-utils\");\nconst runtime_utils_1 = require(\"@fluidframework/runtime-utils\");\n/**\n * Mock implementation of IChannelStorageService based on ITree input.\n */\nclass MockStorage {\n  constructor(tree) {\n    this.tree = tree;\n  }\n  static createFromSummary(summaryTree) {\n    const tree = (0, runtime_utils_1.convertSummaryTreeToITree)(summaryTree);\n    return new MockStorage(tree);\n  }\n  static readBlobCore(tree, paths) {\n    if (tree) {\n      for (const entry of tree.entries) {\n        if (entry.path === paths[0]) {\n          if (entry.type === \"Blob\") {\n            // eslint-disable-next-line prefer-rest-params\n            (0, common_utils_1.assert)(paths.length === 1, JSON.stringify(Object.assign({}, arguments)));\n            return entry.value;\n          }\n          if (entry.type === \"Tree\") {\n            return MockStorage.readBlobCore(entry.value, paths.slice(1));\n          }\n          return undefined;\n        }\n      }\n      return undefined;\n    }\n  }\n  readBlob(path) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const blob = MockStorage.readBlobCore(_this.tree, path.split(\"/\"));\n      (0, common_utils_1.assert)(blob !== undefined, `Blob does not exist: ${path}`);\n      return (0, common_utils_1.stringToBuffer)(blob.contents, blob.encoding);\n    })();\n  }\n  contains(path) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return MockStorage.readBlobCore(_this2.tree, path.split(\"/\")) !== undefined;\n    })();\n  }\n  list(path) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return (0, runtime_utils_1.listBlobsAtTreePath)(_this3.tree, path);\n    })();\n  }\n}\nexports.MockStorage = MockStorage;\n//# sourceMappingURL=mockStorage.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}