{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { innerRequestHandler } from \"@fluidframework/request-handler\";\nimport { defaultRouteRequestHandler } from \"../request-handlers\";\nimport { BaseContainerRuntimeFactory } from \"./baseContainerRuntimeFactory\";\nconst defaultDataStoreId = \"default\";\n/**\n * A ContainerRuntimeFactory that initializes Containers with a single default data store, which can be requested from\n * the container with an empty URL.\n *\n * This factory should be exposed as fluidExport off the entry point to your module.\n */\nexport let ContainerRuntimeFactoryWithDefaultDataStore = /*#__PURE__*/(() => {\n  class ContainerRuntimeFactoryWithDefaultDataStore extends BaseContainerRuntimeFactory {\n    constructor(defaultFactory, registryEntries, providerEntries = [], requestHandlers = [], runtimeOptions) {\n      super(registryEntries, providerEntries, [...requestHandlers, defaultRouteRequestHandler(defaultDataStoreId), innerRequestHandler], runtimeOptions);\n      this.defaultFactory = defaultFactory;\n    }\n    /**\n     * {@inheritDoc BaseContainerRuntimeFactory.containerInitializingFirstTime}\n     */\n    containerInitializingFirstTime(runtime) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield runtime.createRootDataStore(_this.defaultFactory.type, defaultDataStoreId);\n      })();\n    }\n  }\n  ContainerRuntimeFactoryWithDefaultDataStore.defaultDataStoreId = defaultDataStoreId;\n  //# sourceMappingURL=containerRuntimeFactoryWithDefaultDataStore.js.map\n  return ContainerRuntimeFactoryWithDefaultDataStore;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}