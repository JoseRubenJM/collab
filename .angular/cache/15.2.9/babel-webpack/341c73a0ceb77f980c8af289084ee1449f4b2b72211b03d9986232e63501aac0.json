{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { RouterliciousDocumentServiceFactory } from \"@fluidframework/routerlicious-driver\";\nimport { InsecureTinyliciousTokenProvider, InsecureTinyliciousUrlResolver } from \"@fluidframework/tinylicious-driver\";\nimport { getContainer } from \"./getContainer\";\n/**\n * Connect to the Tinylicious service and retrieve a Container with the given ID running the given code.\n * @param documentId - The document id to retrieve or create\n * @param containerRuntimeFactory - The container factory to be loaded in the container\n */\nexport function getTinyliciousContainer(_x, _x2, _x3) {\n  return _getTinyliciousContainer.apply(this, arguments);\n}\n//# sourceMappingURL=getTinyliciousContainer.js.map\nfunction _getTinyliciousContainer() {\n  _getTinyliciousContainer = _asyncToGenerator(function* (documentId, containerRuntimeFactory, createNew) {\n    const tokenProvider = new InsecureTinyliciousTokenProvider();\n    const documentServiceFactory = new RouterliciousDocumentServiceFactory(tokenProvider);\n    const urlResolver = new InsecureTinyliciousUrlResolver();\n    return getContainer(documentId, createNew, {\n      url: documentId\n    }, urlResolver, documentServiceFactory, containerRuntimeFactory);\n  });\n  return _getTinyliciousContainer.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}