{"ast":null,"code":"\"use strict\";\n\n/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nvar _asyncToGenerator = require(\"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MockHandle = void 0;\nconst container_definitions_1 = require(\"@fluidframework/container-definitions\");\n/**\n * Mock implementation of IFluidHandle.\n */\nclass MockHandle {\n  constructor(value, path = `mock-handle-${Math.random().toString(36).slice(2)}`, absolutePath = `/${path}`) {\n    this.value = value;\n    this.path = path;\n    this.absolutePath = absolutePath;\n    this.graphAttachState = container_definitions_1.AttachState.Detached;\n  }\n  get IFluidHandle() {\n    return this;\n  }\n  get isAttached() {\n    return this.graphAttachState === container_definitions_1.AttachState.Attached;\n  }\n  get() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.value;\n    })();\n  }\n  attachGraph() {\n    this.graphAttachState = container_definitions_1.AttachState.Attached;\n  }\n  bind() {\n    throw Error(\"MockHandle.bind() unimplemented.\");\n  }\n}\nexports.MockHandle = MockHandle;\n//# sourceMappingURL=mockHandle.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}