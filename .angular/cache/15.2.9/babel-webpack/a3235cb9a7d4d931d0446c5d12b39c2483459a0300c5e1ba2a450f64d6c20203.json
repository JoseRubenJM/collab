{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { getNormalizedObjectStoragePathParts } from \"@fluidframework/runtime-utils\";\nimport { stringToBuffer } from \"@fluidframework/common-utils\";\nexport class ChannelStorageService {\n  constructor(tree, storage, extraBlobs) {\n    this.tree = tree;\n    this.storage = storage;\n    this.extraBlobs = extraBlobs;\n    this.flattenedTree = {};\n    // Create a map from paths to blobs\n    if (tree !== undefined) {\n      ChannelStorageService.flattenTree(\"\", tree, this.flattenedTree);\n    }\n  }\n  static flattenTree(base, tree, results) {\n    // eslint-disable-next-line guard-for-in, no-restricted-syntax\n    for (const path in tree.trees) {\n      ChannelStorageService.flattenTree(`${base}${path}/`, tree.trees[path], results);\n    }\n    // eslint-disable-next-line guard-for-in, no-restricted-syntax\n    for (const blob in tree.blobs) {\n      results[`${base}${blob}`] = tree.blobs[blob];\n    }\n  }\n  contains(path) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.flattenedTree[path] !== undefined;\n    })();\n  }\n  read(path) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const id = yield _this2.getIdForPath(path);\n      const blob = _this2.extraBlobs !== undefined ? _this2.extraBlobs.get(id) : undefined;\n      return blob !== null && blob !== void 0 ? blob : _this2.storage.read(id);\n    })();\n  }\n  readBlob(path) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const id = yield _this3.getIdForPath(path);\n      const blob = _this3.extraBlobs !== undefined ? _this3.extraBlobs.get(id) : undefined;\n      return blob !== undefined ? stringToBuffer(blob, \"base64\") : _this3.storage.readBlob(id);\n    })();\n  }\n  list(path) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n      let tree = _this4.tree;\n      const pathParts = getNormalizedObjectStoragePathParts(path);\n      while (tree !== undefined && pathParts.length > 0) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const part = pathParts.shift();\n        tree = tree.trees[part];\n      }\n      if (tree === undefined || pathParts.length !== 0) {\n        throw new Error(\"path does not exist\");\n      }\n      return Object.keys((_b = (_a = tree) === null || _a === void 0 ? void 0 : _a.blobs, _b !== null && _b !== void 0 ? _b : {}));\n    })();\n  }\n  getIdForPath(path) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return _this5.flattenedTree[path];\n    })();\n  }\n}\n//# sourceMappingURL=channelStorageService.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}