{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { SharedMap } from 'fluid-framework';\nlet AppComponent = class AppComponent {\n  constructor() {\n    // client: TinyliciousClient = new TinyliciousClient()\n    this.containerSchema = {\n      initialObjects: {\n        sharedTimestamp: SharedMap\n      }\n    };\n    this.container = '';\n    this.containerId = '';\n    this.id = '';\n    // async getFluidData() {\n    //   this.containerId = location.hash.substring(1);\n    //   if (!this.containerId) {\n    //     (this.container = await this.client.createContainer(this.containerSchema))\n    //     this.id = await this.container.container.attach()\n    //     location.hash = this.id\n    //   }\n    //   else {\n    //     (this.container = await this.client.getContainer(this.containerId, this.containerSchema))\n    //   }\n    //   return this.container.container.initialObjects['sharedTimestamp'] as SharedMap\n    // }\n    // syncData() {\n    //   // Only sync if the Fluid SharedMap object is defined.\n    //   if (this.sharedTimestamp) {\n    //     this.updateLocalTimestamp = () => { this.localTimestamp = { time: this.sharedTimestamp!.get(\"time\") } }\n    //     this.updateLocalTimestamp()\n    //     this.sharedTimestamp!.on('valueChanged', this.updateLocalTimestamp!)\n    //   }\n    // }\n    // onButtonClick() {\n    //   this.sharedTimestamp?.set('time', Date.now().toString())\n    // }\n  }\n\n  ngOnInit() {\n    return _asyncToGenerator(function* () {})();\n  } // this.sharedTimestamp = await this.getFluidData();\n  // this.syncData();\n\n  ngOnDestroy() {\n    // Delete handler registration when the Angular App component is dismounted.\n    // this.sharedTimestamp!.off('valueChanged', this.updateLocalTimestamp!);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}