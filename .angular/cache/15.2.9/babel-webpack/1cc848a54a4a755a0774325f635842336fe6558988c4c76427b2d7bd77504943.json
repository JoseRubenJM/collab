{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { assert } from \"@fluidframework/common-utils\";\n/**\n * Returns a new IChannelStorageService that resolves the given `path` as root.\n */\nexport class ObjectStoragePartition {\n  constructor(storage, path) {\n    this.storage = storage;\n    this.path = path;\n    // `path` must not include the trailing separator.\n    assert(!path.endsWith(\"/\"));\n  }\n  read(path) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.storage.read(`${_this.path}/${path}`);\n    })();\n  }\n  readBlob(path) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.storage.readBlob(`${_this2.path}/${path}`);\n    })();\n  }\n  contains(path) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.storage.contains(`${_this3.path}/${path}`);\n    })();\n  }\n  list(path) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.storage.list(`${_this4.path}/${path}`);\n    })();\n  }\n}\n//# sourceMappingURL=objectstoragepartition.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}