{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { v4 as uuid } from \"uuid\";\nimport { CreateContainerError } from \"@fluidframework/container-utils\";\nimport { canRetryOnError, DocumentStorageServiceProxy } from \"@fluidframework/driver-utils\";\nimport { getRetryDelayFromError } from \"./deltaManager\";\nexport class RetriableDocumentStorageService extends DocumentStorageServiceProxy {\n  constructor(internalStorageService, deltaManager) {\n    super(internalStorageService);\n    this.deltaManager = deltaManager;\n    this.disposed = false;\n  }\n  dispose() {\n    this.disposed = true;\n  }\n  getSnapshotTree(version) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.readWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this.internalStorageService.getSnapshotTree(version);\n      }));\n    })();\n  }\n  read(blobId) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.readWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this2.internalStorageService.read(blobId);\n      }));\n    })();\n  }\n  readBlob(id) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.readWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this3.internalStorageService.readBlob(id);\n      }));\n    })();\n  }\n  readString(id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.readWithRetry( /*#__PURE__*/_asyncToGenerator(function* () {\n        return _this4.internalStorageService.readString(id);\n      }));\n    })();\n  }\n  delay(timeMs) {\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => setTimeout(() => resolve(), timeMs));\n    })();\n  }\n  readWithRetry(api) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      var _a;\n      let result;\n      let success = false;\n      let retryAfter = 0;\n      let id;\n      do {\n        try {\n          result = yield api();\n          if (id !== undefined) {\n            _this5.deltaManager.refreshDelayInfo(id);\n          }\n          success = true;\n        } catch (err) {\n          if (_this5.disposed) {\n            throw CreateContainerError(\"Storage service disposed!!\");\n          }\n          // If it is not retriable, then just throw the error.\n          if (!canRetryOnError(err)) {\n            throw err;\n          }\n          // If the error is throttling error, then wait for the specified time before retrying.\n          // If the waitTime is not specified, then we start with retrying immediately to max of 8s.\n          retryAfter = (_a = getRetryDelayFromError(err), _a !== null && _a !== void 0 ? _a : Math.min(retryAfter * 2, 8000));\n          if (id === undefined) {\n            id = uuid();\n          }\n          _this5.deltaManager.emitDelayInfo(id, retryAfter, CreateContainerError(err));\n          yield _this5.delay(retryAfter);\n        }\n      } while (!success);\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return result;\n    })();\n  }\n}\n//# sourceMappingURL=retriableDocumentStorageService.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}