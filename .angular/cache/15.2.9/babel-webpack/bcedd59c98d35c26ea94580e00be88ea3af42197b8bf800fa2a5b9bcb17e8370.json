{"ast":null,"code":"import _asyncToGenerator from \"/Users/jose/Desktop/proyects/fluid-angular/FluidAngular/collaborative-textarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { DocumentService } from \"./documentService\";\nimport { WSDeltaConnection } from \"./wsDeltaConnection\";\n/**\n * The DocumentService manages the Socket.IO connection and manages routing requests to connected\n * clients\n */\nexport class DocumentService2 extends DocumentService {\n  constructor(resolvedUrl, ordererUrl, deltaStorageUrl, gitUrl, errorTracking, disableCache, historianApi, directCredentials, tokenProvider, tenantId, documentId) {\n    super(resolvedUrl, ordererUrl, deltaStorageUrl, gitUrl, errorTracking, disableCache, historianApi, directCredentials, undefined, tokenProvider, tenantId, documentId);\n  }\n  /**\n   * Connects to a delta stream endpoint of provided documentService so as to fire ops.\n   *\n   * @param client - Client that connects to socket.\n   * @returns returns the delta stream service.\n   */\n  connectToDeltaStream(client) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const ordererToken = yield _this.tokenProvider.fetchOrdererToken(_this.tenantId, _this.documentId);\n      return WSDeltaConnection.create(_this.tenantId, _this.documentId, ordererToken.jwt, client, _this.ordererUrl);\n    })();\n  }\n}\n//# sourceMappingURL=documentService2.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}