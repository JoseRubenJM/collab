{"ast":null,"code":"/*!\n * Copyright (c) Microsoft Corporation and contributors. All rights reserved.\n * Licensed under the MIT License.\n */\nexport var MessageType = /*#__PURE__*/(() => {\n  (function (MessageType) {\n    /**\n     * Empty operation message. Used to send an updated reference sequence number.\n     * Relay service is free to coalesce these messages or fully drop them, if\n     * another op was used to update MSN to a number equal or higher than referenced\n     * sequence number in Noop.\n     */\n    MessageType[\"NoOp\"] = \"noop\";\n    /**\n     * System message sent to indicate a new client has joined the collaboration.\n     */\n    MessageType[\"ClientJoin\"] = \"join\";\n    /**\n     * System message sent to indicate a client has left the collaboration.\n     */\n    MessageType[\"ClientLeave\"] = \"leave\";\n    /**\n     * Proposes a new consensus value.\n     */\n    MessageType[\"Propose\"] = \"propose\";\n    /**\n     * Message used to reject a pending proposal.\n     */\n    MessageType[\"Reject\"] = \"reject\";\n    /**\n     * Message sent by client accepting proposal\n     */\n    MessageType[\"Accept\"] = \"accept\";\n    /**\n     * Summary operation (op).\n     */\n    MessageType[\"Summarize\"] = \"summarize\";\n    /**\n     * Summary operation (op) written.\n     */\n    MessageType[\"SummaryAck\"] = \"summaryAck\";\n    /**\n     * Summary operation (op) write failure.\n     */\n    MessageType[\"SummaryNack\"] = \"summaryNack\";\n    /**\n     * Operation (op) produced by container runtime.\n     */\n    MessageType[\"Operation\"] = \"op\";\n    /**\n     * Message to indicate the need of a remote agent for a document.\n     * @deprecated 1.2.0 - Unused from a legacy feature, will be removed entirely in an upcoming release.\n     */\n    MessageType[\"RemoteHelp\"] = \"remoteHelp\";\n    /**\n     * Message to indicate that no active clients are present.\n     */\n    MessageType[\"NoClient\"] = \"noClient\";\n    /**\n     * Message to indicate successful round trip.\n     */\n    MessageType[\"RoundTrip\"] = \"tripComplete\";\n    /**\n     * Service specific control messages that are never sequenced.\n     */\n    MessageType[\"Control\"] = \"control\";\n  })(MessageType || (MessageType = {}));\n  return MessageType;\n})();\nexport var SignalType = /*#__PURE__*/(() => {\n  (function (SignalType) {\n    /**\n     * System signal sent to indicate a new client has joined the collaboration.\n     */\n    SignalType[\"ClientJoin\"] = \"join\";\n    /**\n     * System signal sent to indicate a client has left the collaboration.\n     */\n    SignalType[\"ClientLeave\"] = \"leave\";\n  })(SignalType || (SignalType = {}));\n  return SignalType;\n})();\n/**\n * Type of the Nack.\n * InvalidScopeError: Client's token is not valid for the intended op.\n * ThrottlingError: Retryable after retryAfter number.\n * BadRequestError: Clients op is invalid and should retry immediately with a valid op.\n * LimitExceededError: Service is having issues. Client should not retry.\n */\nexport var NackErrorType = /*#__PURE__*/(() => {\n  (function (NackErrorType) {\n    NackErrorType[\"ThrottlingError\"] = \"ThrottlingError\";\n    NackErrorType[\"InvalidScopeError\"] = \"InvalidScopeError\";\n    NackErrorType[\"BadRequestError\"] = \"BadRequestError\";\n    NackErrorType[\"LimitExceededError\"] = \"LimitExceededError\";\n  })(NackErrorType || (NackErrorType = {}));\n  return NackErrorType;\n})();\n\n//# sourceMappingURL=protocol.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}